table1$Sueldo
as.data.frame(table1)
typeof(table1)
class(table1)
names(table1)
as.data.frame(table1, row.names = NULL)
table1 <- as.data.frame(table1, row.names = NULL)
View(table1)
gsub("MXN","",table1$Sueldo)
table1 <- gsub("MXN","",table1$Sueldo)
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1
table1$Sueldo <- gsub("MXN$","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1
table1$Sueldo <- gsub("MXN\$","",table1$Sueldo)
table1$Sueldo <- gsub("MXN/$","",table1$Sueldo)
table1
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1
table1$Sueldo <- gsub("$","",table1$Sueldo)
table1
table1$Sueldo <- gsub("\$","",table1$Sueldo)
table1
table1$Sueldo <- gsub($,"",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1
table1$Sueldo <- sub("$", "", table1$Sueldo)
table1
table1$Sueldo <- sub("\$", "", table1$Sueldo)
table1
table1$Cargo <- gsub(" -*","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Cargo <- gsub(" \- *","",table1$Cargo)
table1
?gsub
table1$Cargo <- regexpr(" \ *","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- regexpr("\$", "", table1$Sueldo)
table1
table1$Sueldo <- regexpr("\$", "", table1$Sueldo)
table1$Sueldo <- regexpr("$", "", table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Cargo <- regexpr(" - \w","",table1$Cargo)
table1$Cargo <- regexpr(" - \w"i,"",table1$Cargo)
?regexpr
table1$Cargo <- regexpr(" \- \w","",table1$Cargo)
table1$Cargo <- regexpr(" - ","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Sueldo <- regexpr("\\$", "", table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1
table1$Cargo <- gsub(" \\- ","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- $","",table1$Cargo)
table1
table1$Cargo <- gsub(" \\- \\w","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- \\w.","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- \\w.*","",table1$Cargo)
table1
install.packages("hablar")
library(hablar)
table1 %>%
convert(int(Sueldo))
table1
table1 <- table1 %>%
convert(int(Sueldo))
table1
summary(table1)
max(table1)
max(table1$Sueldo)
table1[table1$Sueldo == max(table1$Sueldo)]
table1[table1 == max(table1$Sueldo)]
table1[max(table1$Sueldo)]
library(dplyr)
filter(table1, max(table1$Sueldo) == table1$Sueldo)
filter(table1, min(table1$Sueldo) == table1$Sueldo)
shiny::runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
runApp('TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics/EDA/DashBoard')
houseA <- read.csv('./data/rdata/houseA_.csv')
houseB <- read.csv('./data/rdata/houseB_.csv')
# Primero vamos a remover valores perdidos
library(dplyr)
# Tablas de contingencia de las dos casas para todas las actividades
houseA_f <- filter(houseA, P1 != 0, P2 != 0)
houseB_f <- filter(houseB, P1 != 0, P2 != 0)
tableA <- table(houseA_f$P1, houseA_f$P2)
rownames(tableA)[1] <- "Going_Out"
colnames(tableA)[1] <- "Going_Out"
tableB <- table(houseB_f$P1, houseB_f$P2)
# Tablas de contingencia para cada persona de la casa
tableA_P1 <- table(houseA_f$P1)
tableA_P2 <- table(houseA_f$P2)
row.names(tableA_P1)[1] <- "Going_Out"
row.names(tableA_P2)[1] <- "Going_Out"
tableA_P1 <- tableA_P1[order(row.names(tableA_P1))]
tableA_P2 <- tableA_P2[order(row.names(tableA_P2))]
common_act_A <- intersect(row.names(tableA_P1),row.names(tableA_P2)) # Actividades en común casa A
# Aquí me doy cuenta que la persona 2 de la casa A no hace cleaning, having
# guest, having lunch ni preparing lunch pero sí shaving
tableA_P1_common <- tableA_P1[common_act_A]
tableA_P2_common <- tableA_P2[common_act_A]
tableB_P1 <- table(houseB_f$P1)
tableB_P2 <- table(houseB_f$P2)
tableB_P1 <- tableB_P1[order(row.names(tableB_P1))]
tableB_P2 <- tableB_P2[order(row.names(tableB_P2))]
common_act_B <- intersect(row.names(tableB_P1),row.names(tableB_P2)) # Actividades en común casa B
# Aquí me doy cuenta que la persona 2 de la casa B no hace cleaning, laundry,
# listening to music, preparing dinner, preparing lunch ni washing dishes
# pero sí napping, shaving
tableB_P1_common <- tableB_P1[common_act_B]
tableB_P2_common <- tableB_P2[common_act_B]
# Extrayendo actividades que las parejas hacen al mismo tiempo
both_A <- diag(as.matrix(tableA[common_act_A,common_act_A]))
both_B <- diag(as.matrix(tableB[common_act_B,common_act_B]))
# Chi cuadrada
houseA_table <- cbind(as.vector(tableA_P1_common),as.vector(tableA_P2_common),as.vector(both_A))
houseB_table <- cbind(as.vector(tableB_P1_common),as.vector(tableB_P2_common),as.vector(both_B))
rownames(houseA_table) <- common_act_A
colnames(houseA_table) <- c("P1","P2","Juntos")
rownames(houseB_table) <- common_act_B
colnames(houseB_table) <- c("P1","P2","Juntos")
# Tablas de contigencia filtrando actividades triviales/individuales
# (going out, brushing teeth, changing clothes, having shower, napping, other,
# sleeping, toileting, shaving)
act_triviales_HA_r <- c(1,2,3,10,14,15,20,23) # P1
act_triviales_HA_c <- c(1,2,3,7,11,12,16,17,20) # P2
act_triviales_HB_r <- c(1,2,4,9,13,18,21) # P1
act_triviales_HB_c <- c(1,2,3,8,10,11,14,15,18) # P2
tableA_f <- tableA[-act_triviales_HA_r,-act_triviales_HA_c]
tableB_f <- tableB[-act_triviales_HB_r,-act_triviales_HB_c]
houseA_table <- subset(houseA_table, rownames(houseA_table) %in% rownames(tableA_f))
houseB_table <- subset(houseB_table, rownames(houseB_table) %in% rownames(tableB_f))
chisqA <- chisq.test(houseA_table)
chisqA$observed
round(chisqA$expected,2)
round(chisqA$residuals, 3)
library(corrplot)
library(ggplot2)
residualsA <- corrplot(chisqA$residuals, is.cor = FALSE)
chisqB <- chisq.test(houseB_table)
chisqB$observed
round(chisqB$expected,2)
round(chisqB$residuals, 3)
library(corrplot)
residualsB <- corrplot(chisqB$residuals, is.cor = FALSE)
setwd("~/TEC/KAUST Learning/BEDU/Modulo 2/SmartHome-DataAnalytics")
houseA <- read.csv('./data/rdata/houseA_.csv')
houseB <- read.csv('./data/rdata/houseB_.csv')
houseA <- read.csv('./data/Aras/houseA_.csv')
houseB <- read.csv('./data/Aras/houseB_.csv')
# Primero vamos a remover valores perdidos
library(dplyr)
# Tablas de contingencia de las dos casas para todas las actividades
houseA_f <- filter(houseA, P1 != 0, P2 != 0)
houseB_f <- filter(houseB, P1 != 0, P2 != 0)
tableA <- table(houseA_f$P1, houseA_f$P2)
rownames(tableA)[1] <- "Going_Out"
colnames(tableA)[1] <- "Going_Out"
tableB <- table(houseB_f$P1, houseB_f$P2)
# Tablas de contingencia para cada persona de la casa
tableA_P1 <- table(houseA_f$P1)
tableA_P2 <- table(houseA_f$P2)
row.names(tableA_P1)[1] <- "Going_Out"
row.names(tableA_P2)[1] <- "Going_Out"
tableA_P1 <- tableA_P1[order(row.names(tableA_P1))]
tableA_P2 <- tableA_P2[order(row.names(tableA_P2))]
common_act_A <- intersect(row.names(tableA_P1),row.names(tableA_P2)) # Actividades en común casa A
# Aquí me doy cuenta que la persona 2 de la casa A no hace cleaning, having
# guest, having lunch ni preparing lunch pero sí shaving
tableA_P1_common <- tableA_P1[common_act_A]
tableA_P2_common <- tableA_P2[common_act_A]
tableB_P1 <- table(houseB_f$P1)
tableB_P2 <- table(houseB_f$P2)
tableB_P1 <- tableB_P1[order(row.names(tableB_P1))]
tableB_P2 <- tableB_P2[order(row.names(tableB_P2))]
common_act_B <- intersect(row.names(tableB_P1),row.names(tableB_P2)) # Actividades en común casa B
# Aquí me doy cuenta que la persona 2 de la casa B no hace cleaning, laundry,
# listening to music, preparing dinner, preparing lunch ni washing dishes
# pero sí napping, shaving
tableB_P1_common <- tableB_P1[common_act_B]
tableB_P2_common <- tableB_P2[common_act_B]
# Extrayendo actividades que las parejas hacen al mismo tiempo
both_A <- diag(as.matrix(tableA[common_act_A,common_act_A]))
both_B <- diag(as.matrix(tableB[common_act_B,common_act_B]))
# Chi cuadrada
houseA_table <- cbind(as.vector(tableA_P1_common),as.vector(tableA_P2_common),as.vector(both_A))
houseB_table <- cbind(as.vector(tableB_P1_common),as.vector(tableB_P2_common),as.vector(both_B))
rownames(houseA_table) <- common_act_A
colnames(houseA_table) <- c("P1","P2","Juntos")
rownames(houseB_table) <- common_act_B
colnames(houseB_table) <- c("P1","P2","Juntos")
# Tablas de contigencia filtrando actividades triviales/individuales
# (going out, brushing teeth, changing clothes, having shower, napping, other,
# sleeping, toileting, shaving)
act_triviales_HA_r <- c(1,2,3,10,14,15,20,23) # P1
act_triviales_HA_c <- c(1,2,3,7,11,12,16,17,20) # P2
act_triviales_HB_r <- c(1,2,4,9,13,18,21) # P1
act_triviales_HB_c <- c(1,2,3,8,10,11,14,15,18) # P2
tableA_f <- tableA[-act_triviales_HA_r,-act_triviales_HA_c]
tableB_f <- tableB[-act_triviales_HB_r,-act_triviales_HB_c]
houseA_table <- subset(houseA_table, rownames(houseA_table) %in% rownames(tableA_f))
houseB_table <- subset(houseB_table, rownames(houseB_table) %in% rownames(tableB_f))
chisqA <- chisq.test(houseA_table)
chisqA$observed
round(chisqA$expected,2)
round(chisqA$residuals, 3)
library(corrplot)
library(ggplot2)
residualsA <- corrplot(chisqA$residuals, is.cor = FALSE)
chisqB <- chisq.test(houseB_table)
chisqB$observed
round(chisqB$expected,2)
round(chisqB$residuals, 3)
library(corrplot)
residualsB <- corrplot(chisqB$residuals, is.cor = FALSE)
?corrplot
chisqA <- chisq.test(houseA_table)
chisqA$observed
round(chisqA$expected,2)
round(chisqA$residuals, 3)
library(corrplot)
library(ggplot2)
residualsA <- corrplot(chisqA$residuals, is.cor = FALSE, title = "Residuales Casa A")
chisqB <- chisq.test(houseB_table)
chisqB$observed
round(chisqB$expected,2)
round(chisqB$residuals, 3)
library(corrplot)
residualsB <- corrplot(chisqB$residuals, is.cor = FALSE, title = "Residuales Casa B")
chisqA <- chisq.test(houseA_table)
chisqA$observed
round(chisqA$expected,2)
round(chisqA$residuals, 3)
library(corrplot)
library(ggplot2)
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE, title = "Residuales Casa A")
chisqB <- chisq.test(houseB_table)
chisqB$observed
round(chisqB$expected,2)
round(chisqB$residuals, 3)
library(corrplot)
residualsB <- corrplot(t(chisqB$residuals), is.cor = FALSE, title = "Residuales Casa B")
?substitute
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "ld")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = ld)
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "full")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "lt")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "td")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "d")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A", tl.pos = "n")
residualsA <- corrplot(t(chisqA$residuals), is.cor = FALSE,
title = "Residuales Casa A")
residualsB <- corrplot(t(chisqB$residuals), is.cor = FALSE,
title = "Residuales Casa B")
freq_table_HA_R1 <- read.csv('./data/rdata/Freq_houseA_P1.csv')
freq_table_HA_R1[1,2] <- "Going_Out"
freq_table_HA_R1[2,2] <- "Missing_Activity"
names(freq_table_HA_R1)[2] <- "Activity"
freq_table_HA_R2 <- read.csv('./data/rdata/Freq_houseA_P2.csv')
freq_table_HA_R2[1,2] <- "Going_Out"
freq_table_HA_R2[2,2] <- "Missing_Activity"
names(freq_table_HA_R2)[2] <- "Activity"
freq_table_HB_R1 <- read.csv('./data/rdata/Freq_houseB_P1.csv')
freq_table_HB_R1[1,2] <- "Missing Activity"
names(freq_table_HB_R1)[2] <- "Activity"
freq_table_HB_R2 <- read.csv('./data/rdata/Freq_houseB_P2.csv')
freq_table_HB_R2[1,2] <- "Missing Activity"
names(freq_table_HB_R2)[2] <- "Activity"
# Creation of charts
library(ggplot2)
# Sorting Frequencies
freq_table_HA_R1[order(freq_table_HA_R1$Freq, decreasing = TRUE),]
freq_table_HA_R2[order(freq_table_HA_R2$Freq, decreasing = TRUE),]
freq_table_HB_R1[order(freq_table_HB_R1$Freq, decreasing = TRUE),]
freq_table_HB_R2[order(freq_table_HB_R2$Freq, decreasing = TRUE),]
# Creation of bar charts
library(scales)
bar_HA_R1 <- ggplot(data = freq_table_HA_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house A")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HA_R2 <- ggplot(data = freq_table_HA_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house A")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R1 <- ggplot(data = freq_table_HB_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house B")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R2 <- ggplot(data = freq_table_HB_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house B")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
freq_table_HA_R1 <- read.csv('./data/Freq_houseA_P1.csv')
freq_table_HA_R1[1,2] <- "Going_Out"
freq_table_HA_R1[2,2] <- "Missing_Activity"
names(freq_table_HA_R1)[2] <- "Activity"
freq_table_HA_R2 <- read.csv('./data/Freq_houseA_P2.csv')
freq_table_HA_R2[1,2] <- "Going_Out"
freq_table_HA_R2[2,2] <- "Missing_Activity"
names(freq_table_HA_R2)[2] <- "Activity"
freq_table_HB_R1 <- read.csv('./data/Freq_houseB_P1.csv')
freq_table_HB_R1[1,2] <- "Missing Activity"
names(freq_table_HB_R1)[2] <- "Activity"
freq_table_HB_R2 <- read.csv('./data/Freq_houseB_P2.csv')
freq_table_HB_R2[1,2] <- "Missing Activity"
names(freq_table_HB_R2)[2] <- "Activity"
# Creation of charts
library(ggplot2)
# Sorting Frequencies
freq_table_HA_R1[order(freq_table_HA_R1$Freq, decreasing = TRUE),]
freq_table_HA_R2[order(freq_table_HA_R2$Freq, decreasing = TRUE),]
freq_table_HB_R1[order(freq_table_HB_R1$Freq, decreasing = TRUE),]
freq_table_HB_R2[order(freq_table_HB_R2$Freq, decreasing = TRUE),]
# Creation of bar charts
library(scales)
bar_HA_R1 <- ggplot(data = freq_table_HA_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house A")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HA_R2 <- ggplot(data = freq_table_HA_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house A")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R1 <- ggplot(data = freq_table_HB_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house B")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R2 <- ggplot(data = freq_table_HB_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house B")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HA_P1
bar_HA_R1
bar_HA_R1 <- ggplot(data = freq_table_HA_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house A during 1 month")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HA_R2 <- ggplot(data = freq_table_HA_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house A during 1 month")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R1 <- ggplot(data = freq_table_HB_R1, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 1 in house B during 1 month")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HB_R2 <- ggplot(data = freq_table_HB_R2, aes(x = reorder(Activity, Freq), y = Freq)) +
geom_col(aes(fill = Activity) , show.legend = FALSE) +
ggtitle(paste("Time spent on each activity by resident 2 in house B during 1 month")) +
coord_flip() +
geom_label(aes(label = percent(Freq/sum(Freq), accuracy =  0.001),
y = -150, fill = Activity),
show.legend = FALSE,
size = 3.5, label.padding = unit(0.1, "lines")) +
expand_limits(y = -150)+
labs(x = "Activity", y = "Seconds")
bar_HA_R1
bar_HA_R2
bar_HB_R1
bar_HB_R2
runApp('EDA/DashBoard')
