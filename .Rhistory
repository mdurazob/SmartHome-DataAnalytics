print("Hello World", quote = false)
print("Hello World", quote = FALSE)
clear
clearPushBack()
clc
cls
library(DBI)
library(RMySQL)
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
dbListTables(MyDataBase)
dbListFields(MyDataBase, 'City')
DataDB <- dbGetQuery(MyDataBase, "select * from City")
class(DataDB)
head(DataDB)
pop.mean <- mean(DataDB$Population)  # Media a la variable de poblaciÃ³n
pop.mean
pop.3 <- pop.mean *3   # Operaciones aritmÃ©ticas
pop.3
library(dplyr)
pop50.mex <-  DataDB %>% filter(CountryCode == "MEX" ,  Population > 50000)   # Ciudades del paÃ­s de MÃ©xico con mÃ¡s de 50,000 habitantes
head(pop50.mex)
unique(DataDB$CountryCode)   # PaÃ­ses que contiene la BDD
library(dbplyr)
library(pool)
library(pool)
my_db <- dbPool(
RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest"
)
dbListTables(my_db)
my_db %>% tbl("Country") %>% head(5) # library(dplyr)
library(DBI)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 5;")
dbFetch(rs)
dbClearResult(rs)
dbDisconnect(conn)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
rs <- dbSendQuery(conn, "SELECT * FROM City LIMIT 5;")
dbFetch(rs)
dbClearResult(rs)
library(rjson)            # Quitar comillas del nombre
URL <- "https://tools.learningcontainer.com/sample-json-file.json" # Asignando el link a una variable
JsonData <- fromJSON(file= URL)     # Se guarda el JSon en un objeto de R
class(JsonData)                     # Vemos que tipo de objeto es JsonData
str(JsonData)                       # Vemos la naturaleza de sus variables
str(JsonData)                       # Vemos la naturaleza de sus variables
sqrt(JsonData$Mobile)
# install.packages("XML")
library(XML)
link <- "http://www-db.deis.unibo.it/courses/TW/DOCS/w3schools/xml/cd_catalog.xml"
# Analizando el XML desde la web
xmlfile <- xmlTreeParse(link)
summary(xmlfile)
head(xmlfile)
#Extraer los valores xml
topxml <- xmlSApply(xmlfile, function(x) xmlSApply(x, xmlValue))
# Colocandolos en un Data Frame
xml_df <- data.frame(t(topxml), row.names= NULL)
str(xml_df) # Observar la naturaleza de las variables del DF
xml_df$PRICE <- as.numeric(xml_df$PRICE)
xml_df$YEAR <- as.numeric(xml_df$YEAR)
mean(xml_df$PRICE)
mean(xml_df$YEAR)
data_df <- xmlToDataFrame(link)
head(data_df)
# install.packages("rvest")
library(rvest)
install.packages("rvest")
install.packages("rvest")
library(rvest)
theurl <- "https://solarviews.com/span/data2.htm"
file <- read_html(theurl)    # Leemos el html
tables <- html_nodes(file, "table")
table1 <- html_table(tables[4], fill = TRUE)
table <- na.omit(as.data.frame(table1))   # Quitamos NAÂ´s que meten filas extras
str(table)  # Vemos la naturaleza de las variables
table$Albedo <- as.numeric(table$Albedo)
str(table)
library(rvest)
url <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(url)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[0], fill = TRUE)
table1 <- html_table(tables[1], fill = TRUE)
table1
install.packages("gsub")
?gsub
head(table1)
head(table1)
table1Sueldo <- gsub("MXN","",table1$Sueldo)
table1
gsub("MXN","",table1$Sueldo)
gsub("MXN","",table1[Sueldo])
gsub("MXN","",table1(Sueldo))
table1$Sueldo
as.data.frame(table1)
typeof(table1)
class(table1)
names(table1)
as.data.frame(table1, row.names = NULL)
table1 <- as.data.frame(table1, row.names = NULL)
View(table1)
gsub("MXN","",table1$Sueldo)
table1 <- gsub("MXN","",table1$Sueldo)
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1
table1$Sueldo <- gsub("MXN$","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1
table1$Sueldo <- gsub("MXN\$","",table1$Sueldo)
table1$Sueldo <- gsub("MXN/$","",table1$Sueldo)
table1
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1
table1$Sueldo <- gsub("$","",table1$Sueldo)
table1
table1$Sueldo <- gsub("\$","",table1$Sueldo)
table1
table1$Sueldo <- gsub($,"",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1
table1$Sueldo <- sub("$", "", table1$Sueldo)
table1
table1$Sueldo <- sub("\$", "", table1$Sueldo)
table1
table1$Cargo <- gsub(" -*","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Cargo <- gsub(" \- *","",table1$Cargo)
table1
?gsub
table1$Cargo <- regexpr(" \ *","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- regexpr("\$", "", table1$Sueldo)
table1
table1$Sueldo <- regexpr("\$", "", table1$Sueldo)
table1$Sueldo <- regexpr("$", "", table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Cargo <- regexpr(" - \w","",table1$Cargo)
table1$Cargo <- regexpr(" - \w"i,"",table1$Cargo)
?regexpr
table1$Cargo <- regexpr(" \- \w","",table1$Cargo)
table1$Cargo <- regexpr(" - ","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1
table1$Sueldo <- regexpr("\\$", "", table1$Sueldo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1
table1$Cargo <- gsub(" \\- ","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- $","",table1$Cargo)
table1
table1$Cargo <- gsub(" \\- \\w","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- \\w.","",table1$Cargo)
table1
table1 <- html_table(tables[1], fill = TRUE)
table1 <- as.data.frame(table1, row.names = NULL)
table1$Sueldo <- gsub("MXN","",table1$Sueldo)
table1$Sueldo <- gsub("/mes","",table1$Sueldo)
table1$Sueldo <- gsub(",","",table1$Sueldo)
table1$Cargo <- gsub("Sueldos para Data Scientist en ","",table1$Cargo)
table1$Sueldo <- gsub("\\$", "", table1$Sueldo)
table1$Cargo <- gsub(" \\- \\w.*","",table1$Cargo)
table1
install.packages("hablar")
library(hablar)
table1 %>%
convert(int(Sueldo))
table1
table1 <- table1 %>%
convert(int(Sueldo))
table1
summary(table1)
max(table1)
max(table1$Sueldo)
table1[table1$Sueldo == max(table1$Sueldo)]
table1[table1 == max(table1$Sueldo)]
table1[max(table1$Sueldo)]
library(dplyr)
filter(table1, max(table1$Sueldo) == table1$Sueldo)
filter(table1, min(table1$Sueldo) == table1$Sueldo)
houseA <- read.csv('./data/rdata/houseA_.csv')
houseB <- read.csv('./data/rdata/houseB_.csv')
setwd("~/TEC/KAUST Learning/BEDU/Modulo 2/DS-Bedu-Equipo14-Proyecto/SmartHome-DataAnalytics")
houseA <- read.csv('./data/rdata/houseA_.csv')
houseB <- read.csv('./data/rdata/houseB_.csv')
# Primero vamos a remover valores perdidos
library(dplyr)
houseA_f <- houseA %>% filter(P1 != 0 | P2 != 0)
houseB_f <- houseB %>% filter(P1 != 0 | P2 != 0)
houseA_f <- houseA %>% filter(P1 != 0 | P2 != 0 | P2 != "Other")
houseB_f <- houseB %>% filter(P1 != 0 | P2 != 0 | P2 != "Other")
tableA <- table(houseA_f$P1, houseA_f$P2)
tableB <- table(houseB_f$P1, houseB_f$P2)
tableA
houseA_f <- filter(houseA, P1 != 0, P2 != 0 | P2 != "Other")
houseB_f <- filter(houseB, P1 != 0, P2 != 0 | P2 != "Other")
houseA_f
tableA
houseA_f <- filter(houseA, P1 != 0, P2 != 0 | P2 != "Other")
houseB_f <- filter(houseB, P1 != 0, P2 != 0 | P2 != "Other")
tableA <- table(houseA_f$P1, houseA_f$P2)
tableB <- table(houseB_f$P1, houseB_f$P2)
tableA
houseB_f <- filter(houseB, P1 != 0, P2 != "Other")
# Tablas de contingencia de las dos casas para todas las actividades
houseA_f <- filter(houseA, P1 != 0, P2 != "Other")
tableA <- table(houseA_f$P1, houseA_f$P2)
tableB <- table(houseB_f$P1, houseB_f$P2)
tableA
tableB
houseA_f <- filter(houseA, P1 != 0, P2 != 0)
houseB_f <- filter(houseB, P1 != 0, P2 != 0)
tableA <- table(houseA_f$P1, houseA_f$P2)
tableB <- table(houseB_f$P1, houseB_f$P2)
act_triviales_HA_r = c(1,2,3,10,14,15,20,23) # P1
act_triviales_HA_c = c(1,2,3,7,11,12,16,17,20) # P2
act_triviales_HB_r = c(1,2,4,9,13,18,21) # P1
act_triviales_HB_c = c(1,2,3,8,10,11,14,15,18) # P2
tableA <- table(houseA_f$P1, houseA_f$P2)
tableB <- table(houseB_f$P1, houseB_f$P2)
tableA
act_triviales_HA_r = c(1,2,3,10,14,15,20,23) # P1
act_triviales_HA_c = c(1,2,3,7,11,12,16,17,20) # P2
act_triviales_HB_r = c(1,2,4,9,13,18,21) # P1
act_triviales_HB_c = c(1,2,3,8,10,11,14,15,18) # P2
tableA_f <- tableA[-act_triviales_HA_r,-act_triviales_HA_c]
tableB_f <- tableB[-act_triviales_HB_r,-act_triviales_HB_c]
tableA_f
tableB_f
# P1 casa A (cleaning, having breakfast, laundry, listening to music)
p1_A_ind = c(1,2,8,9)
# P2 casa A (having breakfast, laundry, listening to music, preparing
# breakfast)
p2_A_ind = c(1,5,6,7)
# P1 casa B (having snack, laundry, listening to music, talking on the phone)
p1_B_ind = c(6,7,8,14)
# P2 casa B (having snack, preparing breakfast, talking on the phone)
p2_B_ind = c(5,6,9)
tableA_f2 <- tableA_f[-p1_A_ind,-p2_A_ind]
tableB_f2 <- tableB_f[-p1_B_ind,-p2_B_ind]
tableA_f2 <- tableA_f[-p1_A_ind,-p2_A_ind]
tableB_f2 <- tableB_f[-p1_B_ind,-p2_B_ind]
tableA_f2
tableB_f2
# Visualización
require(vcd)
mosaic(tableA_f2)
mosaic(tableB_f2)
assoc(tableA_f2)
assoc(tableA_f, shade=T, legend=T)
?assoc
